
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp: null
  name: milvusclusters.milvus.io
spec:
  group: milvus.io
  names:
    kind: MilvusCluster
    listKind: MilvusClusterList
    plural: milvusclusters
    singular: milvuscluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MilvusCluster is the Schema for the milvusclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MilvusClusterSpec defines the desired state of MilvusCluster
            properties:
              dataCoord:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              dataNode:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  insertBufSize:
                    description: Maximum row count of a segment buffered in memory
                    format: int64
                    type: integer
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              env:
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previous defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                        $$(VAR_NAME). Escaped references will never be expanded, regardless
                        of whether the variable exists or not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              envFrom:
                items:
                  description: EnvFromSource represents the source of a set of ConfigMaps
                  properties:
                    configMapRef:
                      description: The ConfigMap to select from
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the ConfigMap must be defined
                          type: boolean
                      type: object
                    prefix:
                      description: An optional identifier to prepend to each key in
                        the ConfigMap. Must be a C_IDENTIFIER.
                      type: string
                    secretRef:
                      description: The Secret to select from
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret must be defined
                          type: boolean
                      type: object
                  type: object
                type: array
              etcd:
                properties:
                  collectionBinlogSubPath:
                    type: string
                  endpoints:
                    items:
                      type: string
                    type: array
                  flushStreamPosSubPath:
                    type: string
                  kvSubPath:
                    type: string
                  metaSubPath:
                    type: string
                  rootPath:
                    type: string
                  segmentBinlogSubPath:
                    type: string
                  statsStreamPosSubPath:
                    type: string
                required:
                - endpoints
                type: object
              image:
                type: string
              imagePullPolicy:
                description: PullPolicy describes a policy for if/when to pull a container
                  image
                type: string
              imagePullSecrets:
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              indexCoord:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              indexNode:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              logLevel:
                default: info
                description: LogLevel defines Log level in Milvus. You can configure
                  this parameter as debug, info, warn, error, panic, or fatal
                enum:
                - debug
                - info
                - warn
                - error
                - panic
                - fatal
                type: string
              proxy:
                description: Proxy defines the desired state of Proxy
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                  serviceType:
                    default: ClusterIP
                    description: Service Type string describes ingress methods for
                      a service
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                type: object
              pulsar:
                properties:
                  endpoint:
                    type: string
                  maxMessageSize:
                    format: int64
                    type: integer
                required:
                - endpoint
                type: object
              queryCoord:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              queryNode:
                properties:
                  gracefulTime:
                    description: 'Minimum time before the newly inserted data can
                      be searched. Unit: ms'
                    format: int32
                    type: integer
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              rootCoord:
                description: RootCoord defines the desired state of RootCoord
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              storage:
                properties:
                  bucket:
                    type: string
                  endpoint:
                    type: string
                  insecure:
                    default: false
                    type: boolean
                  secretRef:
                    type: string
                  type:
                    default: minio
                    enum:
                    - minio
                    - s3
                    type: string
                required:
                - type
                type: object
            required:
            - logLevel
            type: object
          status:
            description: MilvusClusterStatus defines the observed state of MilvusCluster
            properties:
              conditions:
                description: Conditions of each components
                items:
                  description: MilvusClusterCondition contains details for the current
                    condition of this pod.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about
                        last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              etcdStatus:
                description: Status of each etcd endpoint
                items:
                  description: MilvusEtcdStatus contains a list of all etcd endpoints
                    status
                  properties:
                    endpoint:
                      type: string
                    error:
                      type: string
                    healthy:
                      type: boolean
                  required:
                  - endpoint
                  - healthy
                  type: object
                type: array
              status:
                default: Creating
                description: Status indicates the overall status of the Milvus Status
                  can be "Creating", "Healthy" and "Unhealthy"
                type: string
              storageStatus:
                description: Status of each storage endpoint
                items:
                  description: MilvusStorageStatus contains a list of all storage
                    endpoints status
                  properties:
                    endpoint:
                      type: string
                    error:
                      type: string
                    status:
                      type: string
                    uptime:
                      type: string
                  required:
                  - endpoint
                  - status
                  type: object
                type: array
            required:
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
