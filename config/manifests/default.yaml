apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: milvus-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp: null
  name: milvusclusters.milvus.io
spec:
  group: milvus.io
  names:
    kind: MilvusCluster
    listKind: MilvusClusterList
    plural: milvusclusters
    singular: milvuscluster
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MilvusCluster is the Schema for the milvusclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MilvusClusterSpec defines the desired state of MilvusCluster
            properties:
              dataCoord:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              dataNode:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  insertBufSize:
                    description: Maximum row count of a segment buffered in memory
                    format: int64
                    type: integer
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              env:
                items:
                  description: EnvVar represents an environment variable present in a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes, optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              envFrom:
                items:
                  description: EnvFromSource represents the source of a set of ConfigMaps
                  properties:
                    configMapRef:
                      description: The ConfigMap to select from
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the ConfigMap must be defined
                          type: boolean
                      type: object
                    prefix:
                      description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                      type: string
                    secretRef:
                      description: The Secret to select from
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret must be defined
                          type: boolean
                      type: object
                  type: object
                type: array
              etcd:
                properties:
                  collectionBinlogSubPath:
                    type: string
                  endpoints:
                    items:
                      type: string
                    type: array
                  flushStreamPosSubPath:
                    type: string
                  inCluster:
                    type: boolean
                  inClusterSpec:
                    properties:
                      name:
                        type: string
                      replicas:
                        enum:
                        - 1
                        - 3
                        - 5
                        - 7
                        format: int32
                        type: integer
                      storage:
                        type: string
                    type: object
                  kvSubPath:
                    type: string
                  metaSubPath:
                    type: string
                  rootPath:
                    type: string
                  segmentBinlogSubPath:
                    type: string
                  statsStreamPosSubPath:
                    type: string
                required:
                - endpoints
                type: object
              image:
                type: string
              imagePullPolicy:
                description: PullPolicy describes a policy for if/when to pull a container image
                type: string
              imagePullSecrets:
                items:
                  description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                type: array
              indexCoord:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              indexNode:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              logLevel:
                default: info
                description: LogLevel defines Log level in Milvus. You can configure this parameter as debug, info, warn, error, panic, or fatal
                enum:
                - debug
                - info
                - warn
                - error
                - panic
                - fatal
                type: string
              proxy:
                description: Proxy defines the desired state of Proxy
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                  serviceType:
                    default: ClusterIP
                    description: Service Type string describes ingress methods for a service
                    enum:
                    - ClusterIP
                    - NodePort
                    - LoadBalancer
                    type: string
                type: object
              pulsar:
                properties:
                  endpoint:
                    type: string
                  maxMessageSize:
                    format: int64
                    type: integer
                required:
                - endpoint
                type: object
              queryCoord:
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              queryNode:
                properties:
                  gracefulTime:
                    description: 'Minimum time before the newly inserted data can be searched. Unit: ms'
                    format: int32
                    type: integer
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              rootCoord:
                description: RootCoord defines the desired state of RootCoord
                properties:
                  grpc:
                    properties:
                      clientMaxRecvSize:
                        format: int32
                        type: integer
                      clientMaxSendSize:
                        format: int32
                        type: integer
                      serverMaxRecvSize:
                        format: int32
                        type: integer
                      serverMaxSendSize:
                        format: int32
                        type: integer
                    type: object
                  port:
                    format: int32
                    maximum: 65535
                    minimum: 0
                    type: integer
                  replicas:
                    default: 1
                    format: int32
                    minimum: 0
                    type: integer
                type: object
              storage:
                properties:
                  bucket:
                    type: string
                  endpoint:
                    type: string
                  insecure:
                    default: false
                    type: boolean
                  secretRef:
                    type: string
                  type:
                    default: Minio
                    enum:
                    - Minio
                    - S3
                    type: string
                required:
                - type
                type: object
            required:
            - logLevel
            type: object
          status:
            description: MilvusClusterStatus defines the observed state of MilvusCluster
            properties:
              conditions:
                description: Conditions of each components
                items:
                  description: MilvusClusterCondition contains details for the current condition of this pod.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Human-readable message indicating details about last transition.
                      type: string
                    reason:
                      description: Unique, one-word, CamelCase reason for the condition's last transition.
                      type: string
                    status:
                      description: Status is the status of the condition. Can be True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              etcdStatus:
                description: Status of each etcd endpoint
                items:
                  description: MilvusEtcdStatus contains a list of all etcd endpoints status
                  properties:
                    endpoint:
                      type: string
                    error:
                      type: string
                    healthy:
                      type: boolean
                  required:
                  - endpoint
                  - healthy
                  type: object
                type: array
              status:
                default: Creating
                description: Status indicates the overall status of the Milvus Status can be "Creating", "Healthy" and "Unhealthy"
                type: string
              storageStatus:
                description: Status of each storage endpoint
                items:
                  description: MilvusStorageStatus contains a list of all storage endpoints status
                  properties:
                    endpoint:
                      type: string
                    error:
                      type: string
                    status:
                      type: string
                    uptime:
                      type: string
                  required:
                  - endpoint
                  - status
                  type: object
                type: array
            required:
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: milvus-operator-controller-manager
  namespace: milvus-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: milvus-operator-leader-election-role
  namespace: milvus-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: milvus-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - sercrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - milvus.io
  resources:
  - milvusclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - milvus.io
  resources:
  - milvusclusters/finalizers
  verbs:
  - update
- apiGroups:
  - milvus.io
  resources:
  - milvusclusters/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: milvus-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: milvus-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: milvus-operator-leader-election-rolebinding
  namespace: milvus-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: milvus-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: milvus-operator-controller-manager
  namespace: milvus-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: milvus-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: milvus-operator-manager-role
subjects:
- kind: ServiceAccount
  name: milvus-operator-controller-manager
  namespace: milvus-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: milvus-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: milvus-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: milvus-operator-controller-manager
  namespace: milvus-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 71808ec5.milvus.io
kind: ConfigMap
metadata:
  name: milvus-operator-manager-config
  namespace: milvus-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: milvus-operator-controller-manager-metrics-service
  namespace: milvus-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: milvus-operator-webhook-service
  namespace: milvus-operator-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: milvus-operator-controller-manager
  namespace: milvus-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: milvusdb/milvus-operator:dev-latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: milvus-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: milvus-operator-serving-cert
  namespace: milvus-operator-system
spec:
  dnsNames:
  - milvus-operator-webhook-service.milvus-operator-system.svc
  - milvus-operator-webhook-service.milvus-operator-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: milvus-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: milvus-operator-selfsigned-issuer
  namespace: milvus-operator-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: milvus-operator-system/milvus-operator-serving-cert
  name: milvus-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: milvus-operator-webhook-service
      namespace: milvus-operator-system
      path: /mutate-milvus-io-v1alpha1-milvuscluster
  failurePolicy: Fail
  name: mmilvuscluster.kb.io
  rules:
  - apiGroups:
    - milvus.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - milvusclusters
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: milvus-operator-system/milvus-operator-serving-cert
  name: milvus-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: milvus-operator-webhook-service
      namespace: milvus-operator-system
      path: /validate-milvus-io-v1alpha1-milvuscluster
  failurePolicy: Fail
  name: vmilvuscluster.kb.io
  rules:
  - apiGroups:
    - milvus.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - milvusclusters
  sideEffects: None
