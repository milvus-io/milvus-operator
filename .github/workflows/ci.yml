name: CI

# This workflow is triggered on any golang code, makefile, workflow changes to repository.
on:
  push:
    paths-ignore:
      - 'docs/**'
  pull_request:
    paths-ignore:
      - 'docs/**'

jobs:
  code-check:
    name: Code Check
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu18.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Cache Go Mod Pkg
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Code Check
        run: |
          make code-check
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu18.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Cache Go Mod Pkg
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Cache TestBin
        uses: actions/cache@v2
        with:
          path: testbin
          key: ubuntu${{ matrix.ubuntu }}-testbin
          restore-keys: ubuntu${{ matrix.ubuntu }}-testbin
      - name: Kubernetes KinD Cluster
        uses: container-tools/kind-action@v1
      - name: Unit Test
        run: |
          make go-generate
          make test-only
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          # token: ${{ secrets.CODECOV_TOKEN }}
          files: ./cover.out
          name: ubuntu-${{ matrix.ubuntu }}-unittests

  sit:
    name: System Integration Test
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu18.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare Docker Images
        run: |
          make sit-prepare-images
      - name: Setup KinD Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
      - name: Deploy to KinD
        run: |
          make sit-deploy
      - name: Integration Test
        run: |
          make sit-test

  sit-kafka:
    name: System Integration Test for Kafka
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu18.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare Docker Images
        run: |
          make sit-prepare-images
      - name: Setup KinD Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
      - name: Deploy to KinD
        run: |
          make sit-deploy
      - name: Integration Test
        run: |
          make sit-test mode=kafka

  sit-alpha:
    name: System Integration Test for v1alpha1
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu18.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare Docker Images
        run: |
          make sit-prepare-images
      - name: Setup KinD Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
      - name: Deploy to KinD
        run: |
          make sit-deploy
      - name: Integration Test
        run: |
          make sit-test mode=alpha

  sit-mixture:
    name: System Integration Test for Mixture
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu18.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare Docker Images
        run: |
          make sit-prepare-images
      - name: Setup KinD Cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
      - name: Deploy to KinD
        run: |
          make sit-deploy
      - name: Integration Test
        run: |
          make sit-test mode=mixture